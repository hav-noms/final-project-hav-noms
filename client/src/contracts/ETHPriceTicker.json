{
  "contractName": "ETHPriceTicker",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "priceETHUSD",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x58ed766d"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewOraclizeQuery",
      "type": "event",
      "signature": "0x621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogNewPriceUpdate",
      "type": "event",
      "signature": "0x45380602dfae37a071d17a70de11828a8e4331f4068463d68453d10f354798cf"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x27dc297e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x38bbfa50"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0xa2e62045"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50611ae5806100206000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461006757806338bbfa501461013957806358ed766d146102a2578063a2e6204514610332575b600080fd5b34801561007357600080fd5b506101376004803603604081101561008a57600080fd5b8101908080359060200190929190803590602001906401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061033c565b005b34801561014557600080fd5b506102a06004803603606081101561015c57600080fd5b81019080803590602001909291908035906020019064010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021a57600080fd5b82018360208201111561022c57600080fd5b8035906020019184600183028401116401000000008311171561024e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061037f565b005b3480156102ae57600080fd5b506102b761052d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61033a6105cb565b005b61037b828260006040519080825280601f01601f1916602001820160405280156103755781602001600182028038833980820191505090505b5061037f565b5050565b610387610835565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561044f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f53656e646572206d757374206265206f7261636c697a655f636241646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6104576105cb565b816005908051906020019061046d929190611a14565b507f45380602dfae37a071d17a70de11828a8e4331f4068463d68453d10f354798cf6005604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b50509250505060405180910390a1505050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081565b3073ffffffffffffffffffffffffffffffffffffffff16316106216040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250610ba8565b11156106e0577f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e60405180806020018281038252604c8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656521000000000000000000000000000000000000000081525060600191505060405180910390a1610833565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260368152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e2e0000000000000000000081525060400191505060405180910390a1610831603c6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604e81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d584554485a555344292e726573756c81526020017f742e584554485a5553442e632e30000000000000000000000000000000000000815250610f8f565b505b565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806108bd575060006108bb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611548565b145b156108ce576108cc6000611553565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561095457600080fd5b505af1158015610968573d6000803e3d6000fd5b505050506040513d602081101561097e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610ae557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050506040513d6020811015610a9457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610b6857600080fd5b505afa158015610b7c573d6000803e3d6000fd5b505050506040513d6020811015610b9257600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610c3057506000610c2e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611548565b145b15610c4157610c3f6000611553565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b505050506040513d6020811015610cf157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e5857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ddd57600080fd5b505af1158015610df1573d6000803e3d6000fd5b505050506040513d6020811015610e0757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f01578082015181840152602081019050610ee6565b50505050905090810190601f168015610f2e5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610f4d57600080fd5b505af1158015610f61573d6000803e3d6000fd5b505050506040513d6020811015610f7757600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061101757506000611015600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611548565b145b15611028576110266000611553565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110ae57600080fd5b505af11580156110c2573d6000803e3d6000fd5b505050506040513d60208110156110d857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561123f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111c457600080fd5b505af11580156111d8573d6000803e3d6000fd5b505050506040513d60208110156111ee57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112ea5780820151818401526020810190506112cf565b50505050905090810190601f1680156113175780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561133657600080fd5b505af115801561134a573d6000803e3d6000fd5b505050506040513d602081101561136057600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115611397576000600102915050611541565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561144d578082015181840152602081019050611432565b50505050905090810190601f16801561147a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156114b3578082015181840152602081019050611498565b50505050905090810190601f1680156114e05780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561150157600080fd5b505af1158015611515573d6000803e3d6000fd5b50505050506040513d602081101561152c57600080fd5b81019080805190602001909291905050509150505b9392505050565b6000813b9050919050565b600061155d611564565b9050919050565b600080611584731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611548565b111561162657731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061161d6040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506119fa565b600190506119f7565b600061164573c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611548565b11156116e75773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116de6040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506119fa565b600190506119f7565b600061170673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611548565b11156117a85773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061179f6040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506119fa565b600190506119f7565b60006117c773146500cfd35b22e4a392fe0adc06de1a1368ed48611548565b11156118695773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118606040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506119fa565b600190506119f7565b6000611888736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611548565b11156118ec57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119f7565b600061190b7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611548565b111561196f577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119f7565b600061198e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611548565b11156119f2577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119f7565b600090505b90565b8060029080519060200190611a10929190611a14565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a5557805160ff1916838001178555611a83565b82800160010185558215611a83579182015b82811115611a82578251825591602001919060010190611a67565b5b509050611a909190611a94565b5090565b611ab691905b80821115611ab2576000816000905550600101611a9a565b5090565b9056fea165627a7a723058203b8c49682390ce4cb8342d9a36b017adab1124b02a3ca5f2eb21f1b0e67282aa0029",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461006757806338bbfa501461013957806358ed766d146102a2578063a2e6204514610332575b600080fd5b34801561007357600080fd5b506101376004803603604081101561008a57600080fd5b8101908080359060200190929190803590602001906401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061033c565b005b34801561014557600080fd5b506102a06004803603606081101561015c57600080fd5b81019080803590602001909291908035906020019064010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021a57600080fd5b82018360208201111561022c57600080fd5b8035906020019184600183028401116401000000008311171561024e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061037f565b005b3480156102ae57600080fd5b506102b761052d565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102f75780820151818401526020810190506102dc565b50505050905090810190601f1680156103245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61033a6105cb565b005b61037b828260006040519080825280601f01601f1916602001820160405280156103755781602001600182028038833980820191505090505b5061037f565b5050565b610387610835565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561044f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f53656e646572206d757374206265206f7261636c697a655f636241646472657381526020017f730000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6104576105cb565b816005908051906020019061046d929190611a14565b507f45380602dfae37a071d17a70de11828a8e4331f4068463d68453d10f354798cf6005604051808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b50509250505060405180910390a1505050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b505050505081565b3073ffffffffffffffffffffffffffffffffffffffff16316106216040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250610ba8565b11156106e0577f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e60405180806020018281038252604c8152602001807f4f7261636c697a6520717565727920776173204e4f542073656e742c20706c6581526020017f6173652061646420736f6d652045544820746f20636f76657220666f7220746881526020017f652071756572792066656521000000000000000000000000000000000000000081525060600191505060405180910390a1610833565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260368152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e2e0000000000000000000081525060400191505060405180910390a1610831603c6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604e81526020017f6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f707581526020017f626c69632f5469636b65723f706169723d584554485a555344292e726573756c81526020017f742e584554485a5553442e632e30000000000000000000000000000000000000815250610f8f565b505b565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806108bd575060006108bb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611548565b145b156108ce576108cc6000611553565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561095457600080fd5b505af1158015610968573d6000803e3d6000fd5b505050506040513d602081101561097e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610ae557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050506040513d6020811015610a9457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015610b6857600080fd5b505afa158015610b7c573d6000803e3d6000fd5b505050506040513d6020811015610b9257600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610c3057506000610c2e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611548565b145b15610c4157610c3f6000611553565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610cc757600080fd5b505af1158015610cdb573d6000803e3d6000fd5b505050506040513d6020811015610cf157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e5857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610ddd57600080fd5b505af1158015610df1573d6000803e3d6000fd5b505050506040513d6020811015610e0757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f01578082015181840152602081019050610ee6565b50505050905090810190601f168015610f2e5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610f4d57600080fd5b505af1158015610f61573d6000803e3d6000fd5b505050506040513d6020811015610f7757600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061101757506000611015600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611548565b145b15611028576110266000611553565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110ae57600080fd5b505af11580156110c2573d6000803e3d6000fd5b505050506040513d60208110156110d857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561123f57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111c457600080fd5b505af11580156111d8573d6000803e3d6000fd5b505050506040513d60208110156111ee57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112ea5780820151818401526020810190506112cf565b50505050905090810190601f1680156113175780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561133657600080fd5b505af115801561134a573d6000803e3d6000fd5b505050506040513d602081101561136057600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115611397576000600102915050611541565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561144d578082015181840152602081019050611432565b50505050905090810190601f16801561147a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156114b3578082015181840152602081019050611498565b50505050905090810190601f1680156114e05780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561150157600080fd5b505af1158015611515573d6000803e3d6000fd5b50505050506040513d602081101561152c57600080fd5b81019080805190602001909291905050509150505b9392505050565b6000813b9050919050565b600061155d611564565b9050919050565b600080611584731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611548565b111561162657731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061161d6040805190810160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506119fa565b600190506119f7565b600061164573c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611548565b11156116e75773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506116de6040805190810160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506119fa565b600190506119f7565b600061170673b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611548565b11156117a85773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061179f6040805190810160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506119fa565b600190506119f7565b60006117c773146500cfd35b22e4a392fe0adc06de1a1368ed48611548565b11156118695773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506118606040805190810160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506119fa565b600190506119f7565b6000611888736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611548565b11156118ec57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119f7565b600061190b7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611548565b111561196f577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119f7565b600061198e7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611548565b11156119f2577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506119f7565b600090505b90565b8060029080519060200190611a10929190611a14565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611a5557805160ff1916838001178555611a83565b82800160010185558215611a83579182015b82811115611a82578251825591602001919060010190611a67565b5b509050611a909190611a94565b5090565b611ab691905b80821115611ab2576000816000905550600101611a9a565b5090565b9056fea165627a7a723058203b8c49682390ce4cb8342d9a36b017adab1124b02a3ca5f2eb21f1b0e67282aa0029",
  "sourceMap": "235:1410:1:-;;;315:156;8:9:-1;5:2;;;30:1;27;20:12;5:2;315:156:1;235:1410;;;;;;",
  "deployedSourceMap": "235:1410:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14801:122:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14801:122:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:13;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:13;;;;;;;;;;;;;;;;;;477:331:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;477:331:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;477:331:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;477:331:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;477:331:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;477:331:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;477:331:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;477:331:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;477:331:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;477:331:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;477:331:1;;;;;;;;;;;;;;;;;;283:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;283:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:571;;;;;;14801:122:13;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:13;;;;14876:10;:40::i;:::-;14801:122;;:::o;477:331:1:-;592:20;:18;:20::i;:::-;578:34;;:10;:34;;;570:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;660:8;:6;:8::i;:::-;750:6;736:11;:20;;;;;;;;;;;;:::i;:::-;;771:30;789:11;771:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;477:331;;;:::o;283:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;814:571::-;896:4;888:21;;;861:24;;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;:48;857:522;;;930:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:522;;;1065:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:107;1171:2;1156:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:107::i;:::-;;857:522;814:571::o;36649:130:13:-;36709:24;11830:1;11806:26;;11814:3;;;;;;;;;;;11806:26;;;11805:64;;;;11867:1;11838:25;11858:3;;;;;;;;;;;11838:11;:25::i;:::-;:30;11805:64;11801:130;;;11885:35;11462:1;11885:19;:35::i;:::-;;11801:130;11965:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11965:16:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11965:16:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11965:16:13;;;;;;;;;;;;;;;;11944:37;;11952:8;;;;;;;;;;;11944:37;;;;11940:106;;;12018:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12018:16:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12018:16:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12018:16:13;;;;;;;;;;;;;;;;11997:8;;:38;;;;;;;;;;;;;;;;;;11940:106;36752:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36752:20:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36752:20:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;36752:20:13;;;;;;;;;;;;;;;;36745:27;;36649:130;:::o;15101:156::-;15185:16;11830:1;11806:26;;11814:3;;;;;;;;;;;11806:26;;;11805:64;;;;11867:1;11838:25;11858:3;;;;;;;;;;;11838:11;:25::i;:::-;:30;11805:64;11801:130;;;11885:35;11462:1;11885:19;:35::i;:::-;;11801:130;11965:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11965:16:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11965:16:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11965:16:13;;;;;;;;;;;;;;;;11944:37;;11952:8;;;;;;;;;;;11944:37;;;;11940:106;;;12018:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12018:16:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12018:16:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12018:16:13;;;;;;;;;;;;;;;;11997:8;;:38;;;;;;;;;;;;;;;;;;11940:106;15220:8;;;;;;;;;;;:17;;;15238:11;15220:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15220:30:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15220:30:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15220:30:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15220:30:13;;;;;;;;;;;;;;;;15213:37;;15101:156;;;:::o;15811:379::-;15929:11;11830:1;11806:26;;11814:3;;;;;;;;;;;11806:26;;;11805:64;;;;11867:1;11838:25;11858:3;;;;;;;;;;;11838:11;:25::i;:::-;:30;11805:64;11801:130;;;11885:35;11462:1;11885:19;:35::i;:::-;;11801:130;11965:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11965:16:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11965:16:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11965:16:13;;;;;;;;;;;;;;;;11944:37;;11952:8;;;;;;;;;;;11944:37;;;;11940:106;;;12018:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12018:16:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12018:16:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12018:16:13;;;;;;;;;;;;;;;;11997:8;;:38;;;;;;;;;;;;;;;;;;11940:106;15952:10;15965:8;;;;;;;;;;;:17;;;15983:11;15965:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;15965:30:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15965:30:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15965:30:13;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15965:30:13;;;;;;;;;;;;;;;;15952:43;;16041:6;16027:11;:20;16017:7;:30;16009:5;:38;16005:104;;;16070:1;16063:8;;;;;;;16005:104;16125:8;;;;;;;;;;;:14;;;16146:5;16153:10;16165:11;16178:4;16125:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16125:58:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16125:58:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16125:58:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16125:58:13;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16125:58:13;;;;;;;;;;;;;;;;16118:65;;;12055:1;15811:379;;;;;:::o;36785:147::-;36844:10;36910:5;36898:18;36889:27;;36875:51;;;:::o;12538:199::-;12603:16;12636:21;:19;:21::i;:::-;12629:28;;12538:199;;;:::o;13011:1784::-;13060:16;13150:1;13092:55;13104:42;13092:11;:55::i;:::-;:59;13088:248;;;13205:42;13177:3;;:71;;;;;;;;;;;;;;;;;;13262:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13321:4;13314:11;;;;13088:248;13407:1;13349:55;13361:42;13349:11;:55::i;:::-;:59;13345:257;;;13470:42;13442:3;;:71;;;;;;;;;;;;;;;;;;13527:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13587:4;13580:11;;;;13345:257;13673:1;13615:55;13627:42;13615:11;:55::i;:::-;:59;13611:252;;;13734:42;13706:3;;:71;;;;;;;;;;;;;;;;;;13791:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13848:4;13841:11;;;;13611:252;13934:1;13876:55;13888:42;13876:11;:55::i;:::-;:59;13872:256;;;13997:42;13969:3;;:71;;;;;;;;;;;;;;;;;;14054:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14113:4;14106:11;;;;13872:256;14199:1;14141:55;14153:42;14141:11;:55::i;:::-;:59;14137:204;;;14262:42;14234:3;;:71;;;;;;;;;;;;;;;;;;14326:4;14319:11;;;;14137:204;14412:1;14354:55;14366:42;14354:11;:55::i;:::-;:59;14350:203;;;14474:42;14446:3;;:71;;;;;;;;;;;;;;;;;;14538:4;14531:11;;;;14350:203;14624:1;14566:55;14578:42;14566:11;:55::i;:::-;:59;14562:205;;;14688:42;14660:3;;:71;;;;;;;;;;;;;;;;;;14752:4;14745:11;;;;14562:205;14783:5;14776:12;;13011:1784;;:::o;12743:125::-;12848:13;12824:21;:37;;;;;;;;;;;;:::i;:::-;;12743:125;:::o;235:1410:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./oraclizeAPI_0.5.sol\";\n\n/**\n * @title ETHUSD Price Oracle\n * @notice Using Oraclize to get the latest ETHUSD price from kraken\n * \n * This file was modified from https://docs.oraclize.it/#ethereum\n */\ncontract ETHPriceTicker is usingOraclize {\n\n    string public priceETHUSD;\n\n    constructor() public {\n        //oraclize_setProof(proofType_Android | proofStorage_IPFS);\n        //update(); // Update price on contract creation...\n    }\n\n    function __callback(bytes32 myid, string memory result, bytes memory proof) public {\n        require(msg.sender == oraclize_cbAddress(), \"Sender must be oraclize_cbAddress\");\n        update(); // Recursively update the price stored in the contract...\n        priceETHUSD = result;\n        emit LogNewPriceUpdate(priceETHUSD);\n    }\n\n    function update() public payable {\n        if (oraclize_getPrice(\"URL\") > address(this).balance) {\n            emit LogNewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee!\");\n        } else {\n            emit LogNewOraclizeQuery(\"Oraclize query was sent, standing by for the answer...\");\n            oraclize_query(60, \"URL\", \"json(https://api.kraken.com/0/public/Ticker?pair=XETHZUSD).result.XETHZUSD.c.0\");\n            //oraclize_query(\"URL\", \"json(https://api.pro.coinbase.com/products/ETH-USD/ticker).price\");\n        }\n    }\n\n    //-----------------------------------------------------------------\n    // Events\n    //-----------------------------------------------------------------\n    \n    event LogNewOraclizeQuery(string description);\n    event LogNewPriceUpdate(string price);\n}",
  "sourcePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/ETHPriceTicker.sol",
  "ast": {
    "absolutePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/ETHPriceTicker.sol",
    "exportedSymbols": {
      "ETHPriceTicker": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 21,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 8048,
        "src": "25:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8047,
              "src": "262:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$8047",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "262:13:1"
          }
        ],
        "contractDependencies": [
          8047
        ],
        "contractKind": "contract",
        "documentation": "@title ETHUSD Price Oracle\n@notice Using Oraclize to get the latest ETHUSD price from kraken\n\n * This file was modified from https://docs.oraclize.it/#ethereum",
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          8047
        ],
        "name": "ETHPriceTicker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 25,
            "name": "priceETHUSD",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "283:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "283:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "336:135:1",
              "statements": []
            },
            "documentation": null,
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:2:1"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:1"
            },
            "scope": 97,
            "src": "315:156:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "560:248:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8999,
                            "src": "578:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "578:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5870,
                            "src": "592:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "592:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "578:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206d757374206265206f7261636c697a655f636241646472657373",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "614:35:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78c040406a2952a97dd71f37dca67baec1cefb3010004ee10299a2fe6118c92b",
                          "typeString": "literal_string \"Sender must be oraclize_cbAddress\""
                        },
                        "value": "Sender must be oraclize_cbAddress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78c040406a2952a97dd71f37dca67baec1cefb3010004ee10299a2fe6118c92b",
                          "typeString": "literal_string \"Sender must be oraclize_cbAddress\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9002,
                        9003
                      ],
                      "referencedDeclaration": 9003,
                      "src": "570:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:80:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "570:80:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "660:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "660:8:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "priceETHUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "736:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "750:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "736:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "736:20:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "priceETHUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "789:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 54,
                      "name": "LogNewPriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "771:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "771:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "EmitStatement",
                  "src": "766:35:1"
                }
              ]
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "497:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "511:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "533:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "496:56:1"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:1"
            },
            "scope": 97,
            "src": "477:331:1",
            "stateMutability": "nonpayable",
            "superFunction": 2800,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "847:538:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "879:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 62,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          2815,
                          2833
                        ],
                        "referencedDeclaration": 2815,
                        "src": "861:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "861:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9026,
                            "src": "896:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ETHPriceTicker_$97",
                              "typeString": "contract ETHPriceTicker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ETHPriceTicker_$97",
                              "typeString": "contract ETHPriceTicker"
                            }
                          ],
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "888:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "888:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "888:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "861:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 85,
                    "nodeType": "Block",
                    "src": "1046:333:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1085:56:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer..."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                              }
                            ],
                            "id": 75,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1065:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1065:77:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "EmitStatement",
                        "src": "1060:82:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3630",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1171:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 81,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1175:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d584554485a555344292e726573756c742e584554485a5553442e632e30",
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1182:80:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0e5970d3179025654585d662f9e57e08cbac98759ffb9cb476307576646b203b",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=XETHZUSD).result.XETHZUSD.c.0\""
                              },
                              "value": "json(https://api.kraken.com/0/public/Ticker?pair=XETHZUSD).result.XETHZUSD.c.0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0e5970d3179025654585d662f9e57e08cbac98759ffb9cb476307576646b203b",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=XETHZUSD).result.XETHZUSD.c.0\""
                              }
                            ],
                            "id": 79,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2874,
                              2917,
                              2964,
                              3009,
                              3053,
                              3099,
                              3149,
                              3197,
                              3245,
                              3295,
                              3349,
                              3401,
                              3438,
                              3478,
                              3521,
                              3561,
                              3606,
                              3654,
                              3705,
                              3753,
                              3806,
                              3862,
                              3921,
                              3977,
                              4038,
                              4102,
                              4169,
                              4233,
                              4302,
                              4374,
                              4449,
                              4521,
                              4569,
                              4619,
                              4673,
                              4725,
                              4762,
                              4802,
                              4845,
                              4885,
                              4930,
                              4978,
                              5029,
                              5077,
                              5130,
                              5186,
                              5245,
                              5301,
                              5362,
                              5426,
                              5493,
                              5557,
                              5626,
                              5698,
                              5773,
                              5845
                            ],
                            "referencedDeclaration": 2917,
                            "src": "1156:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint256,string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1156:107:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 84,
                        "nodeType": "ExpressionStatement",
                        "src": "1156:107:1"
                      }
                    ]
                  },
                  "id": 86,
                  "nodeType": "IfStatement",
                  "src": "857:522:1",
                  "trueBody": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "911:129:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f72207468652071756572792066656521",
                              "id": 71,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "950:78:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1eacf1c0f9da3415dbe98d64415a67118e8239d5a041a88956ada355e4bcc85e",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee!\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1eacf1c0f9da3415dbe98d64415a67118e8239d5a041a88956ada355e4bcc85e",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee!\""
                              }
                            ],
                            "id": 70,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "930:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "930:99:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73,
                        "nodeType": "EmitStatement",
                        "src": "925:104:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:1"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:1"
            },
            "scope": 97,
            "src": "814:571:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 92,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1580:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:20:1"
            },
            "src": "1554:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 96,
            "name": "LogNewPriceUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1629:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1628:14:1"
            },
            "src": "1605:38:1"
          }
        ],
        "scope": 98,
        "src": "235:1410:1"
      }
    ],
    "src": "0:1645:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/ETHPriceTicker.sol",
    "exportedSymbols": {
      "ETHPriceTicker": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 21,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 8048,
        "src": "25:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8047,
              "src": "262:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$8047",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "262:13:1"
          }
        ],
        "contractDependencies": [
          8047
        ],
        "contractKind": "contract",
        "documentation": "@title ETHUSD Price Oracle\n@notice Using Oraclize to get the latest ETHUSD price from kraken\n\n * This file was modified from https://docs.oraclize.it/#ethereum",
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          8047
        ],
        "name": "ETHPriceTicker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 25,
            "name": "priceETHUSD",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "283:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "283:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "336:135:1",
              "statements": []
            },
            "documentation": null,
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "326:2:1"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:1"
            },
            "scope": 97,
            "src": "315:156:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 58,
              "nodeType": "Block",
              "src": "560:248:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 43,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 39,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8999,
                            "src": "578:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "578:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5870,
                            "src": "592:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "592:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "578:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206d757374206265206f7261636c697a655f636241646472657373",
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "614:35:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78c040406a2952a97dd71f37dca67baec1cefb3010004ee10299a2fe6118c92b",
                          "typeString": "literal_string \"Sender must be oraclize_cbAddress\""
                        },
                        "value": "Sender must be oraclize_cbAddress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_78c040406a2952a97dd71f37dca67baec1cefb3010004ee10299a2fe6118c92b",
                          "typeString": "literal_string \"Sender must be oraclize_cbAddress\""
                        }
                      ],
                      "id": 38,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9002,
                        9003
                      ],
                      "referencedDeclaration": 9003,
                      "src": "570:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:80:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "570:80:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "660:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "660:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "660:8:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 50,
                      "name": "priceETHUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "736:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 51,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "750:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "736:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "736:20:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 55,
                        "name": "priceETHUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "789:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 54,
                      "name": "LogNewPriceUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "771:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "771:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "EmitStatement",
                  "src": "766:35:1"
                }
              ]
            },
            "documentation": null,
            "id": 59,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "497:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "511:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "533:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "496:56:1"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "560:0:1"
            },
            "scope": 97,
            "src": "477:331:1",
            "stateMutability": "nonpayable",
            "superFunction": 2800,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "847:538:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "879:5:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 62,
                        "name": "oraclize_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          2815,
                          2833
                        ],
                        "referencedDeclaration": 2815,
                        "src": "861:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "861:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9026,
                            "src": "896:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ETHPriceTicker_$97",
                              "typeString": "contract ETHPriceTicker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ETHPriceTicker_$97",
                              "typeString": "contract ETHPriceTicker"
                            }
                          ],
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "888:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "888:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "888:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "861:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 85,
                    "nodeType": "Block",
                    "src": "1046:333:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1085:56:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                              },
                              "value": "Oraclize query was sent, standing by for the answer..."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                                "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                              }
                            ],
                            "id": 75,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1065:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1065:77:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78,
                        "nodeType": "EmitStatement",
                        "src": "1060:82:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3630",
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1171:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "55524c",
                              "id": 81,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1175:5:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              "value": "URL"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6a736f6e2868747470733a2f2f6170692e6b72616b656e2e636f6d2f302f7075626c69632f5469636b65723f706169723d584554485a555344292e726573756c742e584554485a5553442e632e30",
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1182:80:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0e5970d3179025654585d662f9e57e08cbac98759ffb9cb476307576646b203b",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=XETHZUSD).result.XETHZUSD.c.0\""
                              },
                              "value": "json(https://api.kraken.com/0/public/Ticker?pair=XETHZUSD).result.XETHZUSD.c.0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                "typeString": "literal_string \"URL\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0e5970d3179025654585d662f9e57e08cbac98759ffb9cb476307576646b203b",
                                "typeString": "literal_string \"json(https://api.kraken.com/0/public/Ticker?pair=XETHZUSD).result.XETHZUSD.c.0\""
                              }
                            ],
                            "id": 79,
                            "name": "oraclize_query",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2874,
                              2917,
                              2964,
                              3009,
                              3053,
                              3099,
                              3149,
                              3197,
                              3245,
                              3295,
                              3349,
                              3401,
                              3438,
                              3478,
                              3521,
                              3561,
                              3606,
                              3654,
                              3705,
                              3753,
                              3806,
                              3862,
                              3921,
                              3977,
                              4038,
                              4102,
                              4169,
                              4233,
                              4302,
                              4374,
                              4449,
                              4521,
                              4569,
                              4619,
                              4673,
                              4725,
                              4762,
                              4802,
                              4845,
                              4885,
                              4930,
                              4978,
                              5029,
                              5077,
                              5130,
                              5186,
                              5245,
                              5301,
                              5362,
                              5426,
                              5493,
                              5557,
                              5626,
                              5698,
                              5773,
                              5845
                            ],
                            "referencedDeclaration": 2917,
                            "src": "1156:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (uint256,string memory,string memory) returns (bytes32)"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1156:107:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 84,
                        "nodeType": "ExpressionStatement",
                        "src": "1156:107:1"
                      }
                    ]
                  },
                  "id": 86,
                  "nodeType": "IfStatement",
                  "src": "857:522:1",
                  "trueBody": {
                    "id": 74,
                    "nodeType": "Block",
                    "src": "911:129:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f7261636c697a6520717565727920776173204e4f542073656e742c20706c656173652061646420736f6d652045544820746f20636f76657220666f72207468652071756572792066656521",
                              "id": 71,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "950:78:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1eacf1c0f9da3415dbe98d64415a67118e8239d5a041a88956ada355e4bcc85e",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee!\""
                              },
                              "value": "Oraclize query was NOT sent, please add some ETH to cover for the query fee!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1eacf1c0f9da3415dbe98d64415a67118e8239d5a041a88956ada355e4bcc85e",
                                "typeString": "literal_string \"Oraclize query was NOT sent, please add some ETH to cover for the query fee!\""
                              }
                            ],
                            "id": 70,
                            "name": "LogNewOraclizeQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "930:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "930:99:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73,
                        "nodeType": "EmitStatement",
                        "src": "925:104:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "829:2:1"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:1"
            },
            "scope": 97,
            "src": "814:571:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 92,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1580:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1580:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1579:20:1"
            },
            "src": "1554:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 96,
            "name": "LogNewPriceUpdate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1629:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1628:14:1"
            },
            "src": "1605:38:1"
          }
        ],
        "scope": 98,
        "src": "235:1410:1"
      }
    ],
    "src": "0:1645:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1548319103814": {
      "events": {},
      "links": {},
      "address": "0x33Ee51Ca487F209A59839CDF94368c88298C66A0",
      "transactionHash": "0x52515c2cff03d5de3d7fcea4afe404183037d645868c1753204ac6515f920d85"
    },
    "1548406669165": {
      "events": {},
      "links": {},
      "address": "0xb8AC00d0fFeF0cEf0c6D627134C4272BAF086444",
      "transactionHash": "0xb5b5f0f0883aaf067c16623ae704c818b5d1dafdda040a85302f1023144d9d48"
    },
    "1548483282450": {
      "events": {},
      "links": {},
      "address": "0x2D4de28995B40209f007D4B082F12e855F70E642",
      "transactionHash": "0xd45853ba14c58b0f479ee342c5ee1bbaa802da00b6b801e5318694c3716c2551"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-26T06:15:05.208Z",
  "devdoc": {
    "methods": {},
    "title": "ETHUSD Price Oracle"
  },
  "userdoc": {
    "methods": {},
    "notice": "Using Oraclize to get the latest ETHUSD price from kraken  * This file was modified from https://docs.oraclize.it/#ethereum"
  }
}
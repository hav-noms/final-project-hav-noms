{
  "contractName": "Pausable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5c975abb"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPauseTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x91b4ded9"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "PauseChanged",
      "type": "event",
      "signature": "0x8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x16c38b3c"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610575806100dc6000396000f3fe608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806316c38b3c146100885780635c975abb146100c5578063715018a6146100f45780638da5cb5b1461010b5780638f32d59b1461016257806391b4ded914610191578063f2fde38b146101bc575b600080fd5b34801561009457600080fd5b506100c3600480360360208110156100ab57600080fd5b8101908080351515906020019092919050505061020d565b005b3480156100d157600080fd5b506100da6102c5565b604051808215151515815260200191505060405180910390f35b34801561010057600080fd5b506101096102d8565b005b34801561011757600080fd5b506101206103aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b506101776103d3565b604051808215151515815260200191505060405180910390f35b34801561019d57600080fd5b506101a661042a565b6040518082815260200191505060405180910390f35b3480156101c857600080fd5b5061020b600480360360208110156101df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610430565b005b6102156103d3565b151561022057600080fd5b600260009054906101000a900460ff1615158115151415610240576102c2565b80600260006101000a81548160ff021916908315150217905550600260009054906101000a900460ff161561027757426001819055505b7f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5600260009054906101000a900460ff16604051808215151515815260200191505060405180910390a15b50565b600260009054906101000a900460ff1681565b6102e06103d3565b15156102eb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015481565b6104386103d3565b151561044357600080fd5b61044c8161044f565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561048b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820f0bc52282f56abfbd1c949d8d2df1613a4662965965f20debabed4bcd8e27b7b0029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806316c38b3c146100885780635c975abb146100c5578063715018a6146100f45780638da5cb5b1461010b5780638f32d59b1461016257806391b4ded914610191578063f2fde38b146101bc575b600080fd5b34801561009457600080fd5b506100c3600480360360208110156100ab57600080fd5b8101908080351515906020019092919050505061020d565b005b3480156100d157600080fd5b506100da6102c5565b604051808215151515815260200191505060405180910390f35b34801561010057600080fd5b506101096102d8565b005b34801561011757600080fd5b506101206103aa565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016e57600080fd5b506101776103d3565b604051808215151515815260200191505060405180910390f35b34801561019d57600080fd5b506101a661042a565b6040518082815260200191505060405180910390f35b3480156101c857600080fd5b5061020b600480360360208110156101df57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610430565b005b6102156103d3565b151561022057600080fd5b600260009054906101000a900460ff1615158115151415610240576102c2565b80600260006101000a81548160ff021916908315150217905550600260009054906101000a900460ff161561027757426001819055505b7f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec5600260009054906101000a900460ff16604051808215151515815260200191505060405180910390a15b50565b600260009054906101000a900460ff1681565b6102e06103d3565b15156102eb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60015481565b6104386103d3565b151561044357600080fd5b61044c8161044f565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561048b57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a72305820f0bc52282f56abfbd1c949d8d2df1613a4662965965f20debabed4bcd8e27b7b0029",
  "sourceMap": "359:1560:3:-;;;495:121;8:9:-1;5:2;;;30:1;27;20:12;5:2;495:121:3;524:10:12;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;359:1560:3;;;;;;",
  "deployedSourceMap": "359:1560:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;744:500;;8:9:-1;5:2;;;30:1;27;20:12;5:2;744:500:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;744:500:3;;;;;;;;;;;;;;;;;;;;;;430:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;430:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:137:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:137:12;;;;;;659:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;659:77:12;;;;;;;;;;;;;;;;;;;;;;;;;;;979:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;979:90:12;;;;;;;;;;;;;;;;;;;;;;;;;;;399:25:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;399:25:3;;;;;;;;;;;;;;;;;;;;;;;1655:107:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1655:107:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1655:107:12;;;;;;;;;;;;;;;;;;;;;;744:500:3;863:9:12;:7;:9::i;:::-;855:18;;;;;;;;915:6:3;;;;;;;;;;;904:17;;:7;:17;;;900:54;;;937:7;;900:54;1006:7;997:6;;:16;;;;;;;;;;;;;;;;;;1087:6;;;;;;;;;;;1083:56;;;1125:3;1109:13;:19;;;;1083:56;1217:20;1230:6;;;;;;;;;;;1217:20;;;;;;;;;;;;;;;;;;;;;;883:1:12;744:500:3;:::o;430:18::-;;;;;;;;;;;;;:::o;1347:137:12:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1408:40;;1429:6;;;;;;;;;;;1408:40;;;;;;;;;;;;1475:1;1458:6;;:19;;;;;;;;;;;;;;;;;;1347:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::o;979:90::-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;399:25:3:-;;;;:::o;1655:107:12:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;1999:1;1979:22;;:8;:22;;;;1971:31;;;;;;;;2046:8;2017:38;;2038:6;;;;;;;;;;;2017:38;;;;;;;;;;;;2074:8;2065:6;;:17;;;;;;;;;;;;;;;;;;1906:183;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n//import \"./Ownable.sol\";\n\n/**\n * @title A contract that can be paused by its owner\n * This contract allows an inheriting contract to be marked as\n * paused. It also defines a modifier which can be used by the\n * inheriting contract to prevent actions while paused.\n */\ncontract Pausable is Ownable {\n    \n    uint public lastPauseTime;\n    bool public paused;\n\n    /**\n     * @dev Constructor\n     */\n    constructor()\n        public\n    {\n        // Paused will be false, and lastPauseTime will be 0 upon initialisation\n    }\n\n    /**\n     * @notice Change the paused state of the contract\n     * @dev Only the contract owner may call this.\n     */\n    function setPaused(bool _paused)\n        external\n        onlyOwner\n    {\n        // Ensure we're actually changing the state before we do anything\n        if (_paused == paused) {\n            return;\n        }\n\n        // Set our paused state.\n        paused = _paused;\n        \n        // If applicable, set the last pause time.\n        if (paused) {\n            lastPauseTime = now;\n        }\n\n        // Let everyone know that our pause state has changed.\n        emit PauseChanged(paused);\n    }\n\n    //-----------------------------------------------------------------\n    // Modifiers\n    //-----------------------------------------------------------------\n\n    /**\n     * @notice Checks this contract is not paused which would cause this function to fail.\n     */\n    modifier notPaused {\n        require(!paused, \"This action cannot be performed while the contract is paused\");\n        _;\n    }\n\n    //-----------------------------------------------------------------\n    // Events\n    //-----------------------------------------------------------------\n\n    /**\n     * @notice Tell the DApps we've paused or unpaused.\n     */\n    event PauseChanged(bool isPaused);\n}\n",
  "sourcePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/Pausable.sol",
  "ast": {
    "absolutePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        341
      ]
    },
    "id": 342,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 286,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 287,
        "nodeType": "ImportDirective",
        "scope": 342,
        "sourceUnit": 7534,
        "src": "25:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 288,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7533,
              "src": "380:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7533",
                "typeString": "contract Ownable"
              }
            },
            "id": 289,
            "nodeType": "InheritanceSpecifier",
            "src": "380:7:3"
          }
        ],
        "contractDependencies": [
          7533
        ],
        "contractKind": "contract",
        "documentation": "@title A contract that can be paused by its owner\nThis contract allows an inheriting contract to be marked as\npaused. It also defines a modifier which can be used by the\ninheriting contract to prevent actions while paused.",
        "fullyImplemented": true,
        "id": 341,
        "linearizedBaseContracts": [
          341,
          7533
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 291,
            "name": "lastPauseTime",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "399:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 290,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "399:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 293,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "430:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 292,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "430:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "528:88:3",
              "statements": []
            },
            "documentation": "@dev Constructor",
            "id": 297,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "506:2:3"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:3"
            },
            "scope": 341,
            "src": "495:121:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "816:428:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 304,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "904:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "915:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "904:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 309,
                  "nodeType": "IfStatement",
                  "src": "900:54:3",
                  "trueBody": {
                    "id": 308,
                    "nodeType": "Block",
                    "src": "923:31:3",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 303,
                        "id": 307,
                        "nodeType": "Return",
                        "src": "937:7:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "997:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 311,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "1006:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "997:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "997:16:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 314,
                    "name": "paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 293,
                    "src": "1087:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 320,
                  "nodeType": "IfStatement",
                  "src": "1083:56:3",
                  "trueBody": {
                    "id": 319,
                    "nodeType": "Block",
                    "src": "1095:44:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 315,
                            "name": "lastPauseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "1109:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 316,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7550,
                            "src": "1125:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1109:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "1109:19:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 322,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "1230:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 321,
                      "name": "PauseChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "1217:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "EmitStatement",
                  "src": "1212:25:3"
                }
              ]
            },
            "documentation": "@notice Change the paused state of the contract\n@dev Only the contract owner may call this.",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 302,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 301,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7467,
                  "src": "802:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "802:9:3"
              }
            ],
            "name": "setPaused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "name": "_paused",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "763:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:14:3"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:0:3"
            },
            "scope": 341,
            "src": "744:500:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "1538:108:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1556:7:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 329,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "1557:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:62:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
                          "typeString": "literal_string \"This action cannot be performed while the contract is paused\""
                        },
                        "value": "This action cannot be performed while the contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
                          "typeString": "literal_string \"This action cannot be performed while the contract is paused\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7551,
                        7552
                      ],
                      "referencedDeclaration": 7552,
                      "src": "1548:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:80:3"
                },
                {
                  "id": 334,
                  "nodeType": "PlaceholderStatement",
                  "src": "1638:1:3"
                }
              ]
            },
            "documentation": "@notice Checks this contract is not paused which would cause this function to fail.",
            "id": 336,
            "name": "notPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:0:3"
            },
            "src": "1519:127:3",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Tell the DApps we've paused or unpaused.",
            "id": 340,
            "name": "PauseChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "indexed": false,
                  "name": "isPaused",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "1902:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1901:15:3"
            },
            "src": "1883:34:3"
          }
        ],
        "scope": 342,
        "src": "359:1560:3"
      }
    ],
    "src": "0:1920:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/clintonennis/Playground/final-project-hav-noms/contracts/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        341
      ]
    },
    "id": 342,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 286,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 287,
        "nodeType": "ImportDirective",
        "scope": 342,
        "sourceUnit": 7534,
        "src": "25:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 288,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7533,
              "src": "380:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$7533",
                "typeString": "contract Ownable"
              }
            },
            "id": 289,
            "nodeType": "InheritanceSpecifier",
            "src": "380:7:3"
          }
        ],
        "contractDependencies": [
          7533
        ],
        "contractKind": "contract",
        "documentation": "@title A contract that can be paused by its owner\nThis contract allows an inheriting contract to be marked as\npaused. It also defines a modifier which can be used by the\ninheriting contract to prevent actions while paused.",
        "fullyImplemented": true,
        "id": 341,
        "linearizedBaseContracts": [
          341,
          7533
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 291,
            "name": "lastPauseTime",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "399:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 290,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "399:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 293,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 341,
            "src": "430:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 292,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "430:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "528:88:3",
              "statements": []
            },
            "documentation": "@dev Constructor",
            "id": 297,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "506:2:3"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "528:0:3"
            },
            "scope": 341,
            "src": "495:121:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "816:428:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 304,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "904:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 305,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "915:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "904:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 309,
                  "nodeType": "IfStatement",
                  "src": "900:54:3",
                  "trueBody": {
                    "id": 308,
                    "nodeType": "Block",
                    "src": "923:31:3",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 303,
                        "id": 307,
                        "nodeType": "Return",
                        "src": "937:7:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 310,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 293,
                      "src": "997:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 311,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "1006:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "997:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "997:16:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 314,
                    "name": "paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 293,
                    "src": "1087:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 320,
                  "nodeType": "IfStatement",
                  "src": "1083:56:3",
                  "trueBody": {
                    "id": 319,
                    "nodeType": "Block",
                    "src": "1095:44:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 315,
                            "name": "lastPauseTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "1109:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 316,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7550,
                            "src": "1125:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1109:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "1109:19:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 322,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "1230:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 321,
                      "name": "PauseChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "1217:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "EmitStatement",
                  "src": "1212:25:3"
                }
              ]
            },
            "documentation": "@notice Change the paused state of the contract\n@dev Only the contract owner may call this.",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 302,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 301,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7467,
                  "src": "802:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "802:9:3"
              }
            ],
            "name": "setPaused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "name": "_paused",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "763:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:14:3"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:0:3"
            },
            "scope": 341,
            "src": "744:500:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "1538:108:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1556:7:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 329,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 293,
                          "src": "1557:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e747261637420697320706175736564",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:62:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
                          "typeString": "literal_string \"This action cannot be performed while the contract is paused\""
                        },
                        "value": "This action cannot be performed while the contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b214273cdb244871f55e1966d43ad7febce81860c609dda0e226c7c1b7959d6f",
                          "typeString": "literal_string \"This action cannot be performed while the contract is paused\""
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7551,
                        7552
                      ],
                      "referencedDeclaration": 7552,
                      "src": "1548:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:80:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:80:3"
                },
                {
                  "id": 334,
                  "nodeType": "PlaceholderStatement",
                  "src": "1638:1:3"
                }
              ]
            },
            "documentation": "@notice Checks this contract is not paused which would cause this function to fail.",
            "id": 336,
            "name": "notPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:0:3"
            },
            "src": "1519:127:3",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@notice Tell the DApps we've paused or unpaused.",
            "id": 340,
            "name": "PauseChanged",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "indexed": false,
                  "name": "isPaused",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "1902:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1901:15:3"
            },
            "src": "1883:34:3"
          }
        ],
        "scope": 342,
        "src": "359:1560:3"
      }
    ],
    "src": "0:1920:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1548319103814": {
      "events": {},
      "links": {},
      "address": "0x5da5e5E48786E2ffc2b751c7DA4C5Fe3746Df5dF",
      "transactionHash": "0x80e71a5fb71f5e5e9ae5c8e104c0e496cd1fccea908232ba73f8e43d2265c600"
    },
    "1548406669165": {
      "events": {},
      "links": {},
      "address": "0x864018ddcFb7ca57E45F131fd48AfBec1D8b88e0",
      "transactionHash": "0xdd0b3cf54759d7ac1b2e690d3eadc139a9092d97f84146614f0d197224d8b0d0"
    },
    "1548483282450": {
      "events": {},
      "links": {},
      "address": "0xe672a2Cd61E5260284f94f67eD2B6bbb425E3142",
      "transactionHash": "0x8881b3f5fd67b7453a411b610adb4344b308c9658e2b24bd02b387201087a26f"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-26T06:15:05.200Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "details": "Constructor"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "setPaused(bool)": {
        "details": "Only the contract owner may call this."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "A contract that can be paused by its owner This contract allows an inheriting contract to be marked as paused. It also defines a modifier which can be used by the inheriting contract to prevent actions while paused."
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setPaused(bool)": {
        "notice": "Change the paused state of the contract"
      }
    }
  }
}